{"ast":null,"code":"var _jsxFileName = \"/home/mdskrumi/Code/React-JS/React Fundamental/seasons/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./components/SeasonDisplay\";\nimport Spinner from \"./components/Spinner\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // THIS IS THE ONLY TIME WE DIRECTLY ASSIGN VALUES TO STATE OBJECT. REST WE WILL USE SETSTATE METHOD\n\n    this.state = {\n      lat: null,\n      lon: null\n    };\n  } // THIS IS SAME AS INITIALIZING IN THE CONSTRUCTOR.\n  //   state = {\n  //     lat: null,\n  //     lon: null,\n  //   };\n  // THIS GETS INVOCKED ONE TIME, SO LOADING DATA HERE IS A GOOD PLACE AND RECOMMANDED..\n\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        lat: position.coords.latitude,\n        lon: position.coords.longitude,\n        errorMsg: \"\"\n      });\n    }, err => {\n      console.log(err);\n      this.setState({\n        errorMsg: err.message\n      });\n    });\n  }\n\n  renderContent() {\n    if (this.state.errorMsg && !this.state.lat && !this.state.lon) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      }, \"Error: \", this.state.errorMsg);\n    } else if (!this.state.errorMsg && this.state.lat && this.state.lon) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(SeasonDisplay, {\n        lat: this.state.lat,\n        lon: this.state.lon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }));\n    } else return /*#__PURE__*/React.createElement(Spinner, {\n      text: \"Please Allow Location Permission\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    });\n  }\n\n  render() {\n    return;\n\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, \"renderContent()\");\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/mdskrumi/Code/React-JS/React Fundamental/seasons/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","Spinner","App","Component","constructor","props","state","lat","lon","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","errorMsg","err","console","log","message","renderContent","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,IADM;AAEXC,MAAAA,GAAG,EAAE;AAFM,KAAb;AAID,GAT+B,CAUhC;AACA;AACA;AACA;AACA;AAEA;;;AACAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACGC,QAAD,IAAc;AACZ,WAAKC,QAAL,CAAc;AACZR,QAAAA,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC,QADT;AAEZT,QAAAA,GAAG,EAAEM,QAAQ,CAACE,MAAT,CAAgBE,SAFT;AAGZC,QAAAA,QAAQ,EAAE;AAHE,OAAd;AAKD,KAPH,EAQGC,GAAD,IAAS;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAKL,QAAL,CAAc;AACZI,QAAAA,QAAQ,EAAEC,GAAG,CAACG;AADF,OAAd;AAGD,KAbH;AAeD;;AAEDC,EAAAA,aAAa,GAAG;AACd,QAAI,KAAKlB,KAAL,CAAWa,QAAX,IAAuB,CAAC,KAAKb,KAAL,CAAWC,GAAnC,IAA0C,CAAC,KAAKD,KAAL,CAAWE,GAA1D,EAA+D;AAC7D,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAW,KAAKF,KAAL,CAAWa,QAAtB,CAAP;AACD,KAFD,MAEO,IAAI,CAAC,KAAKb,KAAL,CAAWa,QAAZ,IAAwB,KAAKb,KAAL,CAAWC,GAAnC,IAA0C,KAAKD,KAAL,CAAWE,GAAzD,EAA8D;AACnE,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,GAA/B;AAAoC,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KANM,MAMA,oBAAO,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACR;;AAEDiB,EAAAA,MAAM,GAAG;AACP;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;;AAlD+B;;AAqDlC1B,QAAQ,CAAC0B,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport SeasonDisplay from \"./components/SeasonDisplay\";\nimport Spinner from \"./components/Spinner\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // THIS IS THE ONLY TIME WE DIRECTLY ASSIGN VALUES TO STATE OBJECT. REST WE WILL USE SETSTATE METHOD\n    this.state = {\n      lat: null,\n      lon: null,\n    };\n  }\n  // THIS IS SAME AS INITIALIZING IN THE CONSTRUCTOR.\n  //   state = {\n  //     lat: null,\n  //     lon: null,\n  //   };\n\n  // THIS GETS INVOCKED ONE TIME, SO LOADING DATA HERE IS A GOOD PLACE AND RECOMMANDED..\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      (position) => {\n        this.setState({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n          errorMsg: \"\",\n        });\n      },\n      (err) => {\n        console.log(err);\n        this.setState({\n          errorMsg: err.message,\n        });\n      }\n    );\n  }\n\n  renderContent() {\n    if (this.state.errorMsg && !this.state.lat && !this.state.lon) {\n      return <p>Error: {this.state.errorMsg}</p>;\n    } else if (!this.state.errorMsg && this.state.lat && this.state.lon) {\n      return (\n        <div>\n          <SeasonDisplay lat={this.state.lat} lon={this.state.lon} />\n        </div>\n      );\n    } else return <Spinner text=\"Please Allow Location Permission\" />;\n  }\n\n  render() {\n    return;\n    <div>renderContent()</div>;\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}